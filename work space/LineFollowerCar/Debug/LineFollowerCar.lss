
LineFollowerCar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003f6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000044a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000044a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000047c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  000004b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d54  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000676  00000000  00000000  000012cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000061b  00000000  00000000  00001942  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  00001f60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000488  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000040c  00000000  00000000  00002514  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00002920  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:



int main(void)
{
	DIO_voidSetPinDir(DIO_PORTA,DIO_PIN0,INPUT);
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	60 e0       	ldi	r22, 0x00	; 0
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTA,DIO_PIN1,INPUT);
  76:	40 e0       	ldi	r20, 0x00	; 0
  78:	61 e0       	ldi	r22, 0x01	; 1
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
	u8 IR1_value, IR2_value;
	DCMOTOR_voidInit();
  80:	0e 94 6b 00 	call	0xd6	; 0xd6 <DCMOTOR_voidInit>
	
    while (1) 
    {
		IR1_value = DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN0);
  84:	60 e0       	ldi	r22, 0x00	; 0
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	0e 94 cb 01 	call	0x396	; 0x396 <DIO_u8ReadpinVal>
  8c:	c8 2f       	mov	r28, r24
		IR2_value = DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN1);
  8e:	61 e0       	ldi	r22, 0x01	; 1
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	0e 94 cb 01 	call	0x396	; 0x396 <DIO_u8ReadpinVal>
		
		if(IR1_value == 0 && IR2_value == 0){
  96:	c1 11       	cpse	r28, r1
  98:	09 c0       	rjmp	.+18     	; 0xac <main+0x40>
  9a:	81 11       	cpse	r24, r1
  9c:	07 c0       	rjmp	.+14     	; 0xac <main+0x40>
			DCMOTOR_voidStop(FIRST_MOTOR_ID);
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	0e 94 ad 00 	call	0x15a	; 0x15a <DCMOTOR_voidStop>
			DCMOTOR_voidStop(SEC_MOTOR_ID);
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	0e 94 ad 00 	call	0x15a	; 0x15a <DCMOTOR_voidStop>
  aa:	ec cf       	rjmp	.-40     	; 0x84 <main+0x18>
		}
		else if( IR1_value == 1 && IR2_value == 0 ){
  ac:	c1 30       	cpi	r28, 0x01	; 1
  ae:	29 f4       	brne	.+10     	; 0xba <main+0x4e>
  b0:	81 11       	cpse	r24, r1
  b2:	03 c0       	rjmp	.+6      	; 0xba <main+0x4e>
			DCMOTOR_voidRight();
  b4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DCMOTOR_voidRight>
  b8:	e5 cf       	rjmp	.-54     	; 0x84 <main+0x18>
		}
		else if( IR1_value == 0 && IR2_value == 1 ){
  ba:	c1 11       	cpse	r28, r1
  bc:	05 c0       	rjmp	.+10     	; 0xc8 <main+0x5c>
  be:	81 30       	cpi	r24, 0x01	; 1
  c0:	19 f4       	brne	.+6      	; 0xc8 <main+0x5c>
			DCMOTOR_voidLeft();
  c2:	0e 94 de 00 	call	0x1bc	; 0x1bc <DCMOTOR_voidLeft>
  c6:	de cf       	rjmp	.-68     	; 0x84 <main+0x18>
		}
		else if( IR1_value == 1 && IR2_value == 1 ){
  c8:	c1 30       	cpi	r28, 0x01	; 1
  ca:	e1 f6       	brne	.-72     	; 0x84 <main+0x18>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	d1 f6       	brne	.-76     	; 0x84 <main+0x18>
			DCMOTOR_voidForward();
  d0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DCMOTOR_voidForward>
  d4:	d7 cf       	rjmp	.-82     	; 0x84 <main+0x18>

000000d6 <DCMOTOR_voidInit>:
	DCMOTOR_voidCW(FIRST_MOTOR_ID);
	DCMOTOR_voidCW(SEC_MOTOR_ID);
}
void DCMOTOR_voidBackword(void){
		DCMOTOR_voidACW(FIRST_MOTOR_ID);
		DCMOTOR_voidACW(SEC_MOTOR_ID);
  d6:	41 e0       	ldi	r20, 0x01	; 1
  d8:	62 e0       	ldi	r22, 0x02	; 2
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
  e0:	41 e0       	ldi	r20, 0x01	; 1
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	82 e0       	ldi	r24, 0x02	; 2
  e6:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
  ea:	41 e0       	ldi	r20, 0x01	; 1
  ec:	61 e0       	ldi	r22, 0x01	; 1
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	65 e0       	ldi	r22, 0x05	; 5
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
  fe:	41 e0       	ldi	r20, 0x01	; 1
 100:	66 e0       	ldi	r22, 0x06	; 6
 102:	82 e0       	ldi	r24, 0x02	; 2
 104:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
 108:	41 e0       	ldi	r20, 0x01	; 1
 10a:	67 e0       	ldi	r22, 0x07	; 7
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <DIO_voidSetPinDir>
 112:	08 95       	ret

00000114 <DCMOTOR_voidCW>:
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	81 f4       	brne	.+32     	; 0x138 <DCMOTOR_voidCW+0x24>
 118:	41 e0       	ldi	r20, 0x01	; 1
 11a:	62 e0       	ldi	r22, 0x02	; 2
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 122:	41 e0       	ldi	r20, 0x01	; 1
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 12c:	40 e0       	ldi	r20, 0x00	; 0
 12e:	61 e0       	ldi	r22, 0x01	; 1
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 136:	08 95       	ret
 138:	82 30       	cpi	r24, 0x02	; 2
 13a:	71 f4       	brne	.+28     	; 0x158 <DCMOTOR_voidCW+0x44>
 13c:	41 e0       	ldi	r20, 0x01	; 1
 13e:	65 e0       	ldi	r22, 0x05	; 5
 140:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	66 e0       	ldi	r22, 0x06	; 6
 148:	82 e0       	ldi	r24, 0x02	; 2
 14a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 14e:	40 e0       	ldi	r20, 0x00	; 0
 150:	67 e0       	ldi	r22, 0x07	; 7
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 158:	08 95       	ret

0000015a <DCMOTOR_voidStop>:
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	81 f4       	brne	.+32     	; 0x17e <DCMOTOR_voidStop+0x24>
 15e:	40 e0       	ldi	r20, 0x00	; 0
 160:	62 e0       	ldi	r22, 0x02	; 2
 162:	82 e0       	ldi	r24, 0x02	; 2
 164:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 168:	40 e0       	ldi	r20, 0x00	; 0
 16a:	60 e0       	ldi	r22, 0x00	; 0
 16c:	82 e0       	ldi	r24, 0x02	; 2
 16e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 172:	40 e0       	ldi	r20, 0x00	; 0
 174:	61 e0       	ldi	r22, 0x01	; 1
 176:	82 e0       	ldi	r24, 0x02	; 2
 178:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 17c:	08 95       	ret
 17e:	82 30       	cpi	r24, 0x02	; 2
 180:	71 f4       	brne	.+28     	; 0x19e <DCMOTOR_voidStop+0x44>
 182:	40 e0       	ldi	r20, 0x00	; 0
 184:	65 e0       	ldi	r22, 0x05	; 5
 186:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 18a:	40 e0       	ldi	r20, 0x00	; 0
 18c:	66 e0       	ldi	r22, 0x06	; 6
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 194:	40 e0       	ldi	r20, 0x00	; 0
 196:	67 e0       	ldi	r22, 0x07	; 7
 198:	82 e0       	ldi	r24, 0x02	; 2
 19a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <DIO_voidSetPinVal>
 19e:	08 95       	ret

000001a0 <DCMOTOR_voidForward>:
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 8a 00 	call	0x114	; 0x114 <DCMOTOR_voidCW>
 1a6:	82 e0       	ldi	r24, 0x02	; 2
 1a8:	0e 94 8a 00 	call	0x114	; 0x114 <DCMOTOR_voidCW>
 1ac:	08 95       	ret

000001ae <DCMOTOR_voidRight>:
}
void DCMOTOR_voidRight(void){
	DCMOTOR_voidCW(FIRST_MOTOR_ID);
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	0e 94 8a 00 	call	0x114	; 0x114 <DCMOTOR_voidCW>
	DCMOTOR_voidStop(SEC_MOTOR_ID);
 1b4:	82 e0       	ldi	r24, 0x02	; 2
 1b6:	0e 94 ad 00 	call	0x15a	; 0x15a <DCMOTOR_voidStop>
 1ba:	08 95       	ret

000001bc <DCMOTOR_voidLeft>:
}

void DCMOTOR_voidLeft(void){
	DCMOTOR_voidCW (SEC_MOTOR_ID);
 1bc:	82 e0       	ldi	r24, 0x02	; 2
 1be:	0e 94 8a 00 	call	0x114	; 0x114 <DCMOTOR_voidCW>
	DCMOTOR_voidStop(FIRST_MOTOR_ID);
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 ad 00 	call	0x15a	; 0x15a <DCMOTOR_voidStop>
 1c8:	08 95       	ret

000001ca <DIO_voidSetPinDir>:
	     switch(copy_u8port){
			 
			  case DIO_PORTA: TOGGLE_BIT(PORTA_REG,copy_u8pin) ; break;
			  case DIO_PORTB: TOGGLE_BIT(PORTB_REG,copy_u8pin) ; break;
			  case DIO_PORTC: TOGGLE_BIT(PORTC_REG,copy_u8pin) ; break;
			  case DIO_PORTD: TOGGLE_BIT(PORTD_REG,copy_u8pin) ; break ;
 1ca:	42 30       	cpi	r20, 0x02	; 2
 1cc:	08 f0       	brcs	.+2      	; 0x1d0 <DIO_voidSetPinDir+0x6>
 1ce:	6f c0       	rjmp	.+222    	; 0x2ae <DIO_voidSetPinDir+0xe4>
 1d0:	41 30       	cpi	r20, 0x01	; 1
 1d2:	a1 f5       	brne	.+104    	; 0x23c <DIO_voidSetPinDir+0x72>
 1d4:	81 30       	cpi	r24, 0x01	; 1
 1d6:	89 f0       	breq	.+34     	; 0x1fa <DIO_voidSetPinDir+0x30>
 1d8:	28 f0       	brcs	.+10     	; 0x1e4 <DIO_voidSetPinDir+0x1a>
 1da:	82 30       	cpi	r24, 0x02	; 2
 1dc:	c9 f0       	breq	.+50     	; 0x210 <DIO_voidSetPinDir+0x46>
 1de:	83 30       	cpi	r24, 0x03	; 3
 1e0:	11 f1       	breq	.+68     	; 0x226 <DIO_voidSetPinDir+0x5c>
 1e2:	08 95       	ret
 1e4:	2a b3       	in	r18, 0x1a	; 26
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_voidSetPinDir+0x26>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_voidSetPinDir+0x22>
 1f4:	82 2b       	or	r24, r18
 1f6:	8a bb       	out	0x1a, r24	; 26
 1f8:	08 95       	ret
 1fa:	27 b3       	in	r18, 0x17	; 23
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_voidSetPinDir+0x3c>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_voidSetPinDir+0x38>
 20a:	82 2b       	or	r24, r18
 20c:	87 bb       	out	0x17, r24	; 23
 20e:	08 95       	ret
 210:	24 b3       	in	r18, 0x14	; 20
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_voidSetPinDir+0x52>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_voidSetPinDir+0x4e>
 220:	82 2b       	or	r24, r18
 222:	84 bb       	out	0x14, r24	; 20
 224:	08 95       	ret
 226:	21 b3       	in	r18, 0x11	; 17
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_voidSetPinDir+0x68>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	6a 95       	dec	r22
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_voidSetPinDir+0x64>
 236:	82 2b       	or	r24, r18
 238:	81 bb       	out	0x11, r24	; 17
 23a:	08 95       	ret
 23c:	41 11       	cpse	r20, r1
 23e:	37 c0       	rjmp	.+110    	; 0x2ae <DIO_voidSetPinDir+0xe4>
 240:	81 30       	cpi	r24, 0x01	; 1
 242:	91 f0       	breq	.+36     	; 0x268 <DIO_voidSetPinDir+0x9e>
 244:	28 f0       	brcs	.+10     	; 0x250 <DIO_voidSetPinDir+0x86>
 246:	82 30       	cpi	r24, 0x02	; 2
 248:	d9 f0       	breq	.+54     	; 0x280 <DIO_voidSetPinDir+0xb6>
 24a:	83 30       	cpi	r24, 0x03	; 3
 24c:	29 f1       	breq	.+74     	; 0x298 <DIO_voidSetPinDir+0xce>
 24e:	08 95       	ret
 250:	2a b3       	in	r18, 0x1a	; 26
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIO_voidSetPinDir+0x92>
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	6a 95       	dec	r22
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIO_voidSetPinDir+0x8e>
 260:	80 95       	com	r24
 262:	82 23       	and	r24, r18
 264:	8a bb       	out	0x1a, r24	; 26
 266:	08 95       	ret
 268:	27 b3       	in	r18, 0x17	; 23
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_voidSetPinDir+0xaa>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_voidSetPinDir+0xa6>
 278:	80 95       	com	r24
 27a:	82 23       	and	r24, r18
 27c:	87 bb       	out	0x17, r24	; 23
 27e:	08 95       	ret
 280:	24 b3       	in	r18, 0x14	; 20
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	02 c0       	rjmp	.+4      	; 0x28c <DIO_voidSetPinDir+0xc2>
 288:	88 0f       	add	r24, r24
 28a:	99 1f       	adc	r25, r25
 28c:	6a 95       	dec	r22
 28e:	e2 f7       	brpl	.-8      	; 0x288 <DIO_voidSetPinDir+0xbe>
 290:	80 95       	com	r24
 292:	82 23       	and	r24, r18
 294:	84 bb       	out	0x14, r24	; 20
 296:	08 95       	ret
 298:	21 b3       	in	r18, 0x11	; 17
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <DIO_voidSetPinDir+0xda>
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	6a 95       	dec	r22
 2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <DIO_voidSetPinDir+0xd6>
 2a8:	80 95       	com	r24
 2aa:	82 23       	and	r24, r18
 2ac:	81 bb       	out	0x11, r24	; 17
 2ae:	08 95       	ret

000002b0 <DIO_voidSetPinVal>:
 2b0:	42 30       	cpi	r20, 0x02	; 2
 2b2:	08 f0       	brcs	.+2      	; 0x2b6 <DIO_voidSetPinVal+0x6>
 2b4:	6f c0       	rjmp	.+222    	; 0x394 <DIO_voidSetPinVal+0xe4>
 2b6:	41 30       	cpi	r20, 0x01	; 1
 2b8:	a1 f5       	brne	.+104    	; 0x322 <DIO_voidSetPinVal+0x72>
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	89 f0       	breq	.+34     	; 0x2e0 <DIO_voidSetPinVal+0x30>
 2be:	28 f0       	brcs	.+10     	; 0x2ca <DIO_voidSetPinVal+0x1a>
 2c0:	82 30       	cpi	r24, 0x02	; 2
 2c2:	c9 f0       	breq	.+50     	; 0x2f6 <DIO_voidSetPinVal+0x46>
 2c4:	83 30       	cpi	r24, 0x03	; 3
 2c6:	11 f1       	breq	.+68     	; 0x30c <DIO_voidSetPinVal+0x5c>
 2c8:	08 95       	ret
 2ca:	2b b3       	in	r18, 0x1b	; 27
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_voidSetPinVal+0x26>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	6a 95       	dec	r22
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_voidSetPinVal+0x22>
 2da:	82 2b       	or	r24, r18
 2dc:	8b bb       	out	0x1b, r24	; 27
 2de:	08 95       	ret
 2e0:	28 b3       	in	r18, 0x18	; 24
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <DIO_voidSetPinVal+0x3c>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	6a 95       	dec	r22
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <DIO_voidSetPinVal+0x38>
 2f0:	82 2b       	or	r24, r18
 2f2:	88 bb       	out	0x18, r24	; 24
 2f4:	08 95       	ret
 2f6:	25 b3       	in	r18, 0x15	; 21
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_voidSetPinVal+0x52>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	6a 95       	dec	r22
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_voidSetPinVal+0x4e>
 306:	82 2b       	or	r24, r18
 308:	85 bb       	out	0x15, r24	; 21
 30a:	08 95       	ret
 30c:	22 b3       	in	r18, 0x12	; 18
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	02 c0       	rjmp	.+4      	; 0x318 <DIO_voidSetPinVal+0x68>
 314:	88 0f       	add	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	6a 95       	dec	r22
 31a:	e2 f7       	brpl	.-8      	; 0x314 <DIO_voidSetPinVal+0x64>
 31c:	82 2b       	or	r24, r18
 31e:	82 bb       	out	0x12, r24	; 18
 320:	08 95       	ret
 322:	41 11       	cpse	r20, r1
 324:	37 c0       	rjmp	.+110    	; 0x394 <DIO_voidSetPinVal+0xe4>
 326:	81 30       	cpi	r24, 0x01	; 1
 328:	91 f0       	breq	.+36     	; 0x34e <DIO_voidSetPinVal+0x9e>
 32a:	28 f0       	brcs	.+10     	; 0x336 <DIO_voidSetPinVal+0x86>
 32c:	82 30       	cpi	r24, 0x02	; 2
 32e:	d9 f0       	breq	.+54     	; 0x366 <DIO_voidSetPinVal+0xb6>
 330:	83 30       	cpi	r24, 0x03	; 3
 332:	29 f1       	breq	.+74     	; 0x37e <DIO_voidSetPinVal+0xce>
 334:	08 95       	ret
 336:	2b b3       	in	r18, 0x1b	; 27
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_voidSetPinVal+0x92>
 33e:	88 0f       	add	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	6a 95       	dec	r22
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_voidSetPinVal+0x8e>
 346:	80 95       	com	r24
 348:	82 23       	and	r24, r18
 34a:	8b bb       	out	0x1b, r24	; 27
 34c:	08 95       	ret
 34e:	28 b3       	in	r18, 0x18	; 24
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	02 c0       	rjmp	.+4      	; 0x35a <DIO_voidSetPinVal+0xaa>
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	6a 95       	dec	r22
 35c:	e2 f7       	brpl	.-8      	; 0x356 <DIO_voidSetPinVal+0xa6>
 35e:	80 95       	com	r24
 360:	82 23       	and	r24, r18
 362:	88 bb       	out	0x18, r24	; 24
 364:	08 95       	ret
 366:	25 b3       	in	r18, 0x15	; 21
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	02 c0       	rjmp	.+4      	; 0x372 <DIO_voidSetPinVal+0xc2>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	6a 95       	dec	r22
 374:	e2 f7       	brpl	.-8      	; 0x36e <DIO_voidSetPinVal+0xbe>
 376:	80 95       	com	r24
 378:	82 23       	and	r24, r18
 37a:	85 bb       	out	0x15, r24	; 21
 37c:	08 95       	ret
 37e:	22 b3       	in	r18, 0x12	; 18
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	02 c0       	rjmp	.+4      	; 0x38a <DIO_voidSetPinVal+0xda>
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	6a 95       	dec	r22
 38c:	e2 f7       	brpl	.-8      	; 0x386 <DIO_voidSetPinVal+0xd6>
 38e:	80 95       	com	r24
 390:	82 23       	and	r24, r18
 392:	82 bb       	out	0x12, r24	; 18
 394:	08 95       	ret

00000396 <DIO_u8ReadpinVal>:

u8 DIO_u8ReadpinVal(u8 copy_u8port, u8 copy_u8pin){
	
	 u8 Loc_u8Val=0 ; 
	 
	  switch(copy_u8port){
 396:	81 30       	cpi	r24, 0x01	; 1
 398:	79 f0       	breq	.+30     	; 0x3b8 <DIO_u8ReadpinVal+0x22>
 39a:	28 f0       	brcs	.+10     	; 0x3a6 <DIO_u8ReadpinVal+0x10>
 39c:	82 30       	cpi	r24, 0x02	; 2
 39e:	a9 f0       	breq	.+42     	; 0x3ca <DIO_u8ReadpinVal+0x34>
 3a0:	83 30       	cpi	r24, 0x03	; 3
 3a2:	e1 f0       	breq	.+56     	; 0x3dc <DIO_u8ReadpinVal+0x46>
 3a4:	24 c0       	rjmp	.+72     	; 0x3ee <DIO_u8ReadpinVal+0x58>
		  
		  case DIO_PORTA:Loc_u8Val = GET_BIT(PINA_REG,copy_u8pin) ; break;
 3a6:	89 b3       	in	r24, 0x19	; 25
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <DIO_u8ReadpinVal+0x1a>
 3ac:	95 95       	asr	r25
 3ae:	87 95       	ror	r24
 3b0:	6a 95       	dec	r22
 3b2:	e2 f7       	brpl	.-8      	; 0x3ac <DIO_u8ReadpinVal+0x16>
 3b4:	81 70       	andi	r24, 0x01	; 1
 3b6:	08 95       	ret
		  case DIO_PORTB:Loc_u8Val = GET_BIT(PINB_REG,copy_u8pin) ; break;
 3b8:	86 b3       	in	r24, 0x16	; 22
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_u8ReadpinVal+0x2c>
 3be:	95 95       	asr	r25
 3c0:	87 95       	ror	r24
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_u8ReadpinVal+0x28>
 3c6:	81 70       	andi	r24, 0x01	; 1
 3c8:	08 95       	ret
		  case DIO_PORTC:Loc_u8Val = GET_BIT(PINC_REG,copy_u8pin) ; break;
 3ca:	83 b3       	in	r24, 0x13	; 19
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <DIO_u8ReadpinVal+0x3e>
 3d0:	95 95       	asr	r25
 3d2:	87 95       	ror	r24
 3d4:	6a 95       	dec	r22
 3d6:	e2 f7       	brpl	.-8      	; 0x3d0 <DIO_u8ReadpinVal+0x3a>
 3d8:	81 70       	andi	r24, 0x01	; 1
 3da:	08 95       	ret
		  case DIO_PORTD:Loc_u8Val = GET_BIT(PIND_REG,copy_u8pin) ; break ;
 3dc:	80 b3       	in	r24, 0x10	; 16
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_u8ReadpinVal+0x50>
 3e2:	95 95       	asr	r25
 3e4:	87 95       	ror	r24
 3e6:	6a 95       	dec	r22
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_u8ReadpinVal+0x4c>
 3ea:	81 70       	andi	r24, 0x01	; 1
 3ec:	08 95       	ret
	
}

u8 DIO_u8ReadpinVal(u8 copy_u8port, u8 copy_u8pin){
	
	 u8 Loc_u8Val=0 ; 
 3ee:	80 e0       	ldi	r24, 0x00	; 0
	
	
	return Loc_u8Val ; 
	
	
}
 3f0:	08 95       	ret

000003f2 <_exit>:
 3f2:	f8 94       	cli

000003f4 <__stop_program>:
 3f4:	ff cf       	rjmp	.-2      	; 0x3f4 <__stop_program>
